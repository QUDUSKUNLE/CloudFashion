# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Customer {
  """Customer counts"""
  Count: Int
}

type Customers {
  """Customer Identity."""
  CustomerID: String

  """Customer Email"""
  CustomerEmail: String!

  """Customer PhoneNumbers."""
  CustomerPhoneNumbers: [String!]!

  """Customer Address"""
  CustomerAddress: JSON

  """Customer CreatedAt."""
  CreatedAt: DateTime

  """Customer UpdatedAt."""
  UpdatedAt: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  """User Identity."""
  UserID: String

  """User Email"""
  Email: String!

  """User PhoneNumbers."""
  PhoneNumbers: [String!]

  """User FirstName."""
  FirstName: String

  """User LastName."""
  LastName: String

  """User Address."""
  Address: JSON

  """User Roles."""
  Roles: [String!]

  """User CreatedAt."""
  CreatedAt: DateTime

  """User UpdatedAt."""
  UpdatedAt: DateTime
}

type LoginResponse {
  """User AccessToken."""
  AccessToken: String!
}

type LogoutResponse {
  """User log out."""
  Message: String!
}

type Designer {
  """Designer Identity"""
  DesignerID: String

  """Designer Name"""
  DesignerName: String!

  """Designer PhoneNumbers."""
  DesignerPhoneNumbers: [String!]

  """Designer Address."""
  DesignerAddress: JSON!

  """Designer CreatedAt."""
  CreatedAt: DateTime

  """Designer UpdatedAt."""
  UpdatedAt: DateTime
}

type Item {
  """Item Identity."""
  ItemID: String!

  """Item count."""
  ItemCount: Int!
  ItemTotalCost: Float

  """Order status."""
  ItemStatus: String

  """Order status."""
  Statuses: JSON

  """Item CreatedAt."""
  CreatedAt: DateTime

  """Item UpdatedAt."""
  UpdatedAt: DateTime
}

type Order {
  """Order identity."""
  OrderID: String!

  """Order Total Amount."""
  OrderAmount: Float

  """Order Accrued Discounts."""
  OrderDiscount: Float

  """Order Address."""
  OrderAddress: JSON

  """Order status."""
  OrderStatus: String

  """Order Payment Identity."""
  PaymentID: String

  """Order CreatedAt."""
  CreatedAt: DateTime

  """Order UpdatedAt."""
  UpdatedAt: DateTime
}

type AOrder {
  """Order identity."""
  OrderID: String!

  """Order Total Amount."""
  OrderAmount: Float

  """Order Accrued Discounts."""
  OrderDiscount: Float

  """Order Address."""
  OrderAddress: JSON

  """Order status."""
  OrderStatus: String

  """Order Payment Identity."""
  PaymentID: String

  """Order CreatedAt."""
  CreatedAt: DateTime

  """Order UpdatedAt."""
  UpdatedAt: DateTime
  OrderItems: [Item!]!
}

type OrderResponse {
  """Order Response."""
  OrderMessage: String!

  """Order status."""
  OrderStatus: String!

  """Order Identity."""
  OrderID: String!
}

type ItemResponse {
  """Item Response."""
  ItemMessage: String!

  """Item status."""
  ItemStatus: String!

  """Item Identity."""
  ItemID: String!
}

type Payment {
  """Payment Identity"""
  PaymentID: String

  """Payment Amount"""
  PaymentAmount: Float!

  """Payment status"""
  PaymentStatus: String!

  """Payment Tracking Identity"""
  PaymentTrackingID: String!

  """Payment CreatedAt."""
  CreatedAt: DateTime

  """Payment UpdatedAt."""
  UpdatedAt: DateTime
}

type Shipment {
  """Shipment Identity"""
  ShipmentID: String

  """Item entity."""
  Item: Item

  """Shipment CreatedAt."""
  CreatedAt: DateTime

  """Shipment UpdatedAt."""
  UpdatedAt: DateTime
}

type Product {
  """Product Identity"""
  ProductID: String

  """Product Name"""
  ProductName: String!

  """Product Quantity"""
  ProductQuantity: Int!

  """Product Video."""
  ProductVideo: String

  """Product Price"""
  ProductPrice: Float!

  """Product Discount."""
  ProductDiscount: Float!

  """Product CreatedAt."""
  CreatedAt: DateTime

  """Product UpdatedAt."""
  UpdatedAt: DateTime
}

type Measurement {
  """Measurement identity"""
  MeasurementID: String!

  """Cloth measurement."""
  Measurement: JSON

  """Measurement CreatedAt."""
  CreatedAt: DateTime

  """Measurement UpdatedAt."""
  UpdatedAt: DateTime
}

type Clothing {
  """Cloth Identity"""
  ClothID: String!

  """Measurement Identity."""
  MeasurementID: String

  """Cloth Request Data"""
  ClothRequestPayload: JSON

  """Clothing CreatedAt."""
  CreatedAt: DateTime

  """Clothing UpdatedAt."""
  UpdatedAt: DateTime
}

type ClothsPayload {
  """Cloth Identity"""
  ClothID: String!

  """Measurement Identity."""
  MeasurementPayload: Measurement

  """Cloth Request Data"""
  ClothRequestPayload: JSON

  """Clothing CreatedAt."""
  CreatedAt: DateTime

  """Clothing UpdatedAt."""
  UpdatedAt: DateTime
}

type Query {
  GetProducts(skip: Int = 0, take: Int = 25): [Product!]!
  GetVendorProducts: [Product!]!
  ProductLists: [Item!]!
  GetProduct(findProductInput: FindProductInput!): Product!
  GetOrders: [AOrder!]!
  GetOrder(findOrderInput: FindOrderInput!): AOrder!
  GetUsersProfile(skip: Int = 0, take: Int = 25): [User!]!
  GetUserProfile(findUserInput: FindUserInput!): User!
  GetPayments: [Payment!]!
  GetPayment(findPaymentInput: FindPaymentInput!): Payment!
  GetShipments: [Shipment!]!
  GetShipment(findShipmentInput: FindShipmentInput!): Shipment!
  GetDesignersProfile(skip: Int = 0, take: Int = 25): [Designer!]!
  GetDesigner(findDesignerInput: FindDesignerInput!): Designer!
  GetClothsRequest: [ClothsPayload!]!
  GetMeasurements: [Measurement!]!
  GetClothRequest(findClothingInput: FindClothingInput!): ClothsPayload!
  GetMeasurement(findMeasurementInput: FindMeasurementInput!): Measurement!
  FetchCustomers(skip: Int = 0, take: Int = 25): [Customers!]!
}

input FindProductInput {
  """Product ID"""
  ProductID: String!
}

input FindOrderInput {
  """Order ID"""
  OrderID: String!
}

input FindUserInput {
  """User ID."""
  UserID: String!
}

input FindPaymentInput {
  """Payment ID"""
  PaymentID: String!
}

input FindShipmentInput {
  """Shipment ID"""
  ShipmentID: String!
}

input FindDesignerInput {
  """Designer ID"""
  DesignerID: String!
}

input FindClothingInput {
  """Cloth ID."""
  ClothID: String!
}

input FindMeasurementInput {
  """Measurement ID."""
  MeasurementID: String!
}

type Mutation {
  CreateProduct(createProductInput: CreateProductInput!): Product!
  UpdateItemStatus(updateItemStatus: UpdateItemInput!): ItemResponse!
  UpdateProduct(updateProductInput: UpdateProductInput!): Product!
  DeleteProduct(findProductInput: FindProductInput!): Product!
  CreateOrder(createOrderInput: CreateOrderInput!): OrderResponse!
  UpdateOrder(updateOrderInput: UpdateOrderInput!): Order!
  DeleteOrder(findOrderInput: FindOrderInput!): Order!
  CreateUserProfile(createUserInput: CreateUserInput!): User!
  LogInUser(logInUserInput: LogInUserInput!): LoginResponse!
  LogOutUser: LogoutResponse!
  UpdateUserProfile(updateUserInput: UpdateUserInput!): User!
  DeleteUserProfile(findUserInput: FindUserInput!): User!
  UpdatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  DeletePayment(findPaymentInput: FindPaymentInput!): Payment!
  CreateShipment(createShipmentInput: CreateShipmentInput!): Shipment!
  UpdateShipment(updateShipmentInput: UpdateShipmentInput!): Shipment!
  DeleteShipment(findShipmentInput: FindShipmentInput!): Shipment!
  CreateDesignerProfile(createDesignerInput: CreateDesignerInput!): Designer!
  UpdateDesignerProfile(updateDesignerInput: UpdateDesignerInput!): Designer!
  DeleteDesignerProfile(findDesignerInput: FindDesignerInput!): Designer!
  CreateClothRequest(createClothingInput: CreateClothingInput!): ClothsPayload!
  CreateMeasurement(createMeasurementInput: CreateMeasurementInput!): Measurement!
  UpdateClothRequest(updateClothingInput: UpdateClothingInput!): Clothing!
  UpdateMeasurement(updateMeasurementInput: UpdateMeasurementInput!): Measurement!
  DeleteClothRequest(findClothingInput: FindClothingInput!): Clothing!
  DeleteMeasurement(findMeasurementInput: FindMeasurementInput!): Measurement!
  CreateCustomer(createCustomerInput: CreateCustomerInput!): Customer!
}

input CreateProductInput {
  """Product name."""
  ProductName: ProductName!

  """Product video."""
  ProductVideo: Upload

  """Product price."""
  ProductPrice: Float!

  """Product discount."""
  ProductDiscount: Float

  """Product quantity."""
  ProductQuantity: Int!

  """Product quantity."""
  CustomerID: Int!
}

"""Product name"""
enum ProductName {
  Kaftan
  Complete
  CasualShirt
  KaftanSenator
  PalmTrouser
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateItemInput {
  """Item status"""
  ItemStatus: ItemStatus!

  """Item ID."""
  ItemID: String!
}

"""Order status"""
enum ItemStatus {
  PROCESSING
  PENDING
  COMPLETED
  CANCELLED
  SHIPPED
  RETURNED
}

input UpdateProductInput {
  """Product name."""
  ProductName: ProductName

  """Product video."""
  ProductVideo: Upload

  """Product price."""
  ProductPrice: Float

  """Product discount."""
  ProductDiscount: Float

  """Product quantity."""
  ProductQuantity: Int

  """Product quantity."""
  CustomerID: Int

  """Product ID."""
  ProductID: String!
}

input CreateOrderInput {
  """Order status."""
  OrderStatus: ItemStatus!

  """Payment identity."""
  Payments: OrderPayment

  """Order address."""
  OrderAddress: Address!

  """Payment Tracking Identity."""
  PaymentTrackingID: String!

  """Order total cost."""
  OrderTotalCost: Float!

  """Product identity"""
  OrderDetails: [OrderDetails!]!
}

input OrderPayment {
  """Payment amount."""
  Amount: Int!

  """Payment currency"""
  Currency: Currency!

  """Payment currency"""
  Channel: Channels!
}

"""Payment currency"""
enum Currency {
  NGN
  GHS
  ZAR
  USD
}

"""Payment channels"""
enum Channels {
  card
  bank
  ussd
  qr
  mobile_money
  bank_transfer
}

input Address {
  """Street number."""
  StreetNo: Int!

  """Street name."""
  StreetName: String!

  """City"""
  City: String!

  """States"""
  State: State!
}

"""State"""
enum State {
  Abia
  Adamawa
  AkwaIbom
  Anambra
  Bauchi
  Benue
  Borno
  Bayelsa
  CrossRiver
  Delta
  Ebonyi
  Edo
  Ekiti
  Enugu
  FCT
  Gombe
  Imo
  Jigawa
  Kebbi
  Kaduna
  Kano
  Kogi
  Katsina
  Kwara
  Lagos
  Nassarawa
  Niger
  Ogun
  Ondo
  Osun
  Oyo
  Plateau
  Rivers
  Sokoto
  Yobe
  Zamfara
}

input OrderDetails {
  """Product ID."""
  ProductID: String!

  """Product count."""
  Count: Int!
}

input UpdateOrderInput {
  """Order status."""
  OrderStatus: ItemStatus

  """Payment identity."""
  Payments: OrderPayment

  """Order address."""
  OrderAddress: Address

  """Payment Tracking Identity."""
  PaymentTrackingID: String

  """Order total cost."""
  OrderTotalCost: Float

  """Product identity"""
  OrderDetails: [OrderDetails!]

  """Order ID"""
  OrderID: String!
}

input CreateUserInput {
  """User Email."""
  Email: String!

  """User Password"""
  Password: String!

  """User ConfirmPassword"""
  ConfirmPassword: String!

  """User PhoneNumber."""
  PhoneNumbers: [String!]

  """User FirstName."""
  FirstName: String

  """User LastName."""
  LastName: String

  """User Address."""
  Address: Address
}

input LogInUserInput {
  """User email."""
  Email: String!

  """User password."""
  Password: String!
}

input UpdateUserInput {
  """User Email."""
  Email: String

  """User Password"""
  Password: String

  """User ConfirmPassword"""
  ConfirmPassword: String

  """User PhoneNumber."""
  PhoneNumbers: [String!]

  """User FirstName."""
  FirstName: String

  """User LastName."""
  LastName: String

  """User Address."""
  Address: Address

  """User Identity."""
  UserID: String!
}

input UpdatePaymentInput {
  """Payment status."""
  PaymentStatus: PaymentStatus

  """Payment Amount."""
  PaymentAmount: Float

  """Payment Tracking identity"""
  PaymentTrackingID: String

  """Orders identity."""
  OrderID: String

  """Payment identity."""
  PaymentID: String!
}

"""Payment status"""
enum PaymentStatus {
  PROCESSING
  PENDING
  COMPLETED
  CANCELLED
  RETURNED
}

input CreateShipmentInput {
  """Item identity."""
  ItemID: String!

  """Order identity."""
  OrderID: String!
}

input UpdateShipmentInput {
  """Item identity."""
  ItemID: String

  """Order identity."""
  OrderID: String

  """Shipment ID"""
  ShipmentID: String!
}

input CreateDesignerInput {
  """Designer role"""
  Role: Role!

  """Designer name"""
  DesignerName: String!

  """Designer phoneNumber."""
  DesignerPhoneNumbers: [String!]!

  """Designer addresses."""
  DesignerAddress: Address!
}

"""Role"""
enum Role {
  ADMIN
  USER
  VENDOR
  DESIGNER
  PUBLIC
}

input UpdateDesignerInput {
  """Designer role"""
  Role: Role

  """Designer name"""
  DesignerName: String

  """Designer phoneNumber."""
  DesignerPhoneNumbers: [String!]

  """Designer addresses."""
  DesignerAddress: Address

  """Designer ID."""
  DesignerID: String!
}

input CreateClothingInput {
  """Cloth Pickup Input"""
  ClothToSow: [ClothPickUpInput!]

  """PickUp Date"""
  PickUpDate: DateTime!

  """Delivery Date"""
  DeliveryDate: DateTime

  """Cloth Return Input"""
  ClothToReturn: [ClothReturnInput!]

  """Cloth Review Input"""
  ClothToReview: [ClothReturnInput!]

  """Cloth Complain Input"""
  ClothToComplain: [ClothReturnInput!]
}

input ClothPickUpInput {
  """SELF PickUpInput"""
  SELF: PickUpInput

  """FATHER PickUpInput"""
  FATHER: PickUpInput

  """SON PickUpInput"""
  SON: PickUpInput

  """UNCLE PickUpInput"""
  UNCLE: PickUpInput

  """BROTHER PickUpInput"""
  BROTHER: PickUpInput

  """GRANDFATHER PickUpInput"""
  GRANDFATHER: PickUpInput
}

input PickUpInput {
  """Cloth PickUp Address"""
  PickUpAddress: Address!

  """Cloth Delivery Address"""
  DeliveryAddress: Address!
}

input ClothReturnInput {
  """SELF ReturnInput"""
  SELF: ReturnInput

  """FATHER ReturnInput"""
  FATHER: ReturnInput

  """SON ReturnInput"""
  SON: ReturnInput

  """UNCLE ReturnInput"""
  UNCLE: ReturnInput

  """BROTHER ReturnInput"""
  BROTHER: ReturnInput

  """GRANDFATHER ReturnInput"""
  GRANDFATHER: ReturnInput
}

input ReturnInput {
  """Cloth PickUp Address"""
  PickUpAddress: Address!

  """Cloth ID"""
  ClothID: String!
}

input CreateMeasurementInput {
  """SELF Measurement"""
  SELF: [CreateMeasurement!]!

  """Father Measurement"""
  FATHER: [CreateMeasurement!]

  """Brother Measurement"""
  BROTHER: [CreateMeasurement!]

  """Son Measurement"""
  SON: [CreateMeasurement!]

  """Uncle Measurement"""
  UNCLE: [CreateMeasurement!]

  """Grandfather Measurement"""
  GRANDFATHER: [CreateMeasurement!]
}

input CreateMeasurement {
  """Measurement unit"""
  MeasurementUnit: MeasurementUnit!

  """Trouser measurements"""
  Trouser: TrouserInput!

  """Shirt measurements"""
  Shirt: ShirtInput!

  """Cap measurements"""
  Cap: CapInput

  """Agbada measurements"""
  Agbada: AgbadaInput
}

"""Measurement unit"""
enum MeasurementUnit {
  mm
  cm
  m
  inch
}

input TrouserInput {
  """Trouser or Shirt length"""
  Length: Float!

  """Trouser Waist length"""
  WaistLength: Float!

  """Trouser Tigh length"""
  TighLength: Float!

  """Trouser Ankle length"""
  AnkleLength: Float!

  """Trouser pucket type"""
  PucketType: PucketType

  """Trouser waist tightening type."""
  WaistTightType: WaistTightType
}

"""Pucket type"""
enum PucketType {
  INSIDE
  OUTSIDE
}

"""Waist tighening type"""
enum WaistTightType {
  ROPE
  BUTTON
}

input ShirtInput {
  """Trouser or Shirt length"""
  Length: Float!

  """Trouser pucket type"""
  PucketType: PucketType

  """Shirt Shoulder length"""
  ShoulderLength: Float!

  """Shirt Arm length"""
  ArmLength: Float!

  """Shirt Arm width"""
  ArmWidth: Float!

  """Shirt Button Type"""
  ButtonType: ButtonType!

  """Shirt Design Type"""
  DesignType: DesignType

  """Shirt Collar Type"""
  ColarNeckType: ColarNeckType

  """Shirt Link Type"""
  LinkType: LinkType
}

"""Button type"""
enum ButtonType {
  EMBEDDED
  EXPOSED
}

"""Shirt Design Type"""
enum DesignType {
  PLAIN
  DESIGN
}

"""Shirt Collar Neck Type"""
enum ColarNeckType {
  EMBEDDED
  BUTTON
}

"""Arm Link Type"""
enum LinkType {
  CUFFLINKS
  BUTTON
}

input CapInput {
  """Trouser or Shirt length"""
  Length: Float!

  """Shirt Design Type"""
  DesignType: DesignType

  """Cap Height"""
  Height: Float!
}

input AgbadaInput {
  """Trouser or Shirt length"""
  Length: Float!

  """Shirt Design Type"""
  DesignType: DesignType

  """Cap Height"""
  Height: Float!
}

input UpdateClothingInput {
  """Cloth Pickup Input"""
  ClothToSow: [ClothPickUpInput!]

  """PickUp Date"""
  PickUpDate: DateTime

  """Delivery Date"""
  DeliveryDate: DateTime

  """Cloth Return Input"""
  ClothToReturn: [ClothReturnInput!]

  """Cloth Review Input"""
  ClothToReview: [ClothReturnInput!]

  """Cloth Complain Input"""
  ClothToComplain: [ClothReturnInput!]

  """Clothing ID."""
  ClothID: String!
}

input UpdateMeasurementInput {
  """SELF Measurement"""
  SELF: [CreateMeasurement!]

  """Father Measurement"""
  FATHER: [CreateMeasurement!]

  """Brother Measurement"""
  BROTHER: [CreateMeasurement!]

  """Son Measurement"""
  SON: [CreateMeasurement!]

  """Uncle Measurement"""
  UNCLE: [CreateMeasurement!]

  """Grandfather Measurement"""
  GRANDFATHER: [CreateMeasurement!]

  """Measurement ID."""
  MeasurementID: String!
}

input CreateCustomerInput {
  """Create Customers"""
  CreateCustomers: [CreateCustomer!]!
}

input CreateCustomer {
  """Customer name"""
  CustomerName: String!

  """Customer Email"""
  CustomerEmail: String!

  """Customer Phonenumbers"""
  CustomerPhoneNumbers: [String!]

  """User Address."""
  CustomerAddress: Address
}